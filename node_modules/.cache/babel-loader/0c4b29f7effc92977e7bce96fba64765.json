{"ast":null,"code":"import _regeneratorRuntime from \"/home/nait/IT/chain/staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nait/IT/chain/staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nait/IT/chain/staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/nait/IT/chain/staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nait/IT/chain/staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/nait/IT/chain/staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/nait/IT/chain/staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nait/IT/chain/staking-app/src/components/App.jsx\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Web3 from \"web3\";\nimport naira from \"../truffle_abi/Naira.json\";\nimport btk from \"../truffle_abi/btk.json\";\nimport ebank from \"../truffle_abi/ebank.json\";\nimport Main from \"./Main\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadweb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadweb3\",\n    value: function () {\n      var _loadweb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('no eth browser found');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadweb3() {\n        return _loadweb.apply(this, arguments);\n      }\n\n      return loadweb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, ntwId, nairaData, eNaira, nairaBal, btkData, rwd, rwdBal, ebankData, eBank, ebankBal;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return window.web3;\n\n              case 2:\n                web3 = _context3.sent;\n                _context3.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 9;\n                return web3.eth.net.getId();\n\n              case 9:\n                ntwId = _context3.sent;\n                //Loading naira contract\n                nairaData = naira.networks[ntwId];\n\n                if (!nairaData) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                eNaira = new web3.eth.Contract(naira.abi, nairaData.address);\n                this.setState({\n                  eNaira: eNaira\n                });\n                _context3.next = 16;\n                return eNaira.methods.balanceOf(this.state.account).call();\n\n              case 16:\n                nairaBal = _context3.sent;\n                this.setState({\n                  nairaBal: nairaBal.toString()\n                });\n                _context3.next = 21;\n                break;\n\n              case 20:\n                window.alert(\"no naira contract found\");\n\n              case 21:\n                // loading btk contract\n                btkData = btk.networks[ntwId];\n\n                if (!btkData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(btk.abi, btkData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 27;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 27:\n                rwdBal = _context3.sent;\n                this.setState({\n                  rwdBal: rwdBal.toString()\n                });\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert(\"no btk contract found\");\n\n              case 32:\n                // loading ebank contract\n                ebankData = ebank.networks[ntwId];\n\n                if (!ebankData) {\n                  _context3.next = 42;\n                  break;\n                }\n\n                eBank = new web3.eth.Contract(ebank.abi, ebankData.address);\n                this.setState({\n                  eBank: eBank\n                });\n                _context3.next = 38;\n                return eBank.methods.stakingBalance(this.state.account).call();\n\n              case 38:\n                ebankBal = _context3.sent;\n                this.setState({\n                  ebankBal: ebankBal.toString()\n                });\n                _context3.next = 43;\n                break;\n\n              case 42:\n                window.alert(\"no ebank contract found\");\n\n              case 43:\n                this.setState({\n                  loading: false\n                });\n\n              case 44:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.stakeToken = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.naira.methods.approve(_this.state.ebank._address, amount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.ebank.methods.depositTokens(amount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"0x0\",\n      naira: {},\n      rwd: {},\n      ebank: {},\n      nairaBal: \"0\",\n      rwdBal: \"0\",\n      stakingBal: \"0\",\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n      this.state.loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n        id: \"loader\",\n        className: \"text-center\",\n        style: {\n          margin: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, \"Loading\") : content = /*#__PURE__*/React.createElement(Main, {\n        rwdBal: this.state.rwdBal,\n        nairaBal: this.state.nairaBal,\n        stakingBal: this.state.stakingBal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: \"600px\",\n          minHeight: \"100vm\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/nait/IT/chain/staking-app/src/components/App.jsx"],"names":["React","Component","Navbar","Web3","naira","btk","ebank","Main","App","loadweb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","ntwId","nairaData","networks","eNaira","Contract","abi","address","methods","balanceOf","state","call","nairaBal","toString","btkData","rwd","rwdBal","ebankData","eBank","stakingBalance","ebankBal","loading","props","stakeToken","amount","approve","_address","send","from","on","hash","depositTokens","stakingBal","content","margin","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport \"./App.css\";\nimport Navbar  from \"./Navbar\"\nimport Web3 from \"web3\";\nimport naira from \"../truffle_abi/Naira.json\";\nimport btk from \"../truffle_abi/btk.json\";\nimport ebank from \"../truffle_abi/ebank.json\"\nimport Main from \"./Main\";\n\nclass App extends Component {\n    async UNSAFE_componentWillMount() {\n        await this.loadweb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadweb3(){\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable()\n        } else if(window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            window.alert('no eth browser found');\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = await window.web3;\n        const account = await web3.eth.getAccounts();\n        this.setState({account: account[0]})\n        const ntwId = await web3.eth.net.getId();\n\n        //Loading naira contract\n        const nairaData = naira.networks[ntwId];\n        if (nairaData) {\n            const eNaira = new web3.eth.Contract(naira.abi, nairaData.address);\n            this.setState({eNaira})\n            let nairaBal = await eNaira.methods.balanceOf(this.state.account).call();\n            this.setState({nairaBal: nairaBal.toString()})\n        } else {\n            window.alert(\"no naira contract found\")\n        }\n\n        // loading btk contract\n        const btkData = btk.networks[ntwId];\n        if (btkData) {\n            const rwd = new web3.eth.Contract(btk.abi, btkData.address);\n            this.setState({rwd})\n            let rwdBal = await rwd.methods.balanceOf(this.state.account).call();\n            this.setState({rwdBal: rwdBal.toString()})\n            \n        } else {\n            window.alert(\"no btk contract found\")\n        }\n\n        // loading ebank contract\n        const ebankData = ebank.networks[ntwId];\n        if (ebankData) {\n            const eBank = new web3.eth.Contract(ebank.abi, ebankData.address);\n            this.setState({eBank})\n            let ebankBal = await eBank.methods.stakingBalance(this.state.account).call();\n            this.setState({ebankBal: ebankBal.toString()})\n        } else {\n            window.alert(\"no ebank contract found\")\n        }\n\n\nthis.setState({loading: false})\n        \n    }\n\n    stakeToken = (amount) => {\n        this.setState({loading: true})\n        this.state.naira.methods.approve(this.state.ebank._address, amount).send({from: this.state.account}).on(\"transactionHash\", (hash) =>{\n            this.state.ebank.methods.depositTokens(amount).send({from: this.state.account}).on(\"transactionHash\", (hash) =>{\n                this.setState({loading: false})\n            })\n        } )\n    }\n\n    constructor(props){\n        super(props)\n        this.state = {\n            account: \"0x0\",\n            naira: {},\n            rwd: {},\n            ebank: {},\n            nairaBal: \"0\",\n            rwdBal: \"0\",\n            stakingBal: \"0\",\n            loading: true\n\n\n        }\n    }\n\n    render(){\n        let content\n        \n        this.state.loading ? content = \n            <p id=\"loader\" className=\"text-center\" style={{margin: \"30px\"}}>\n            Loading</p> : content = < Main\n            rwdBal = {this.state.rwdBal}\n            nairaBal = {this.state.nairaBal}\n            stakingBal = {this.state.stakingBal}\n            />\n        return(\n            <div>\n                <Navbar account={this.state.account}/>\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                        <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth: \"600px\", minHeight: \"100vm\"}}>\n                            <div>{content}</div>\n                        </main>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}